@using Web.Models.View.User
@model Web.Models.View.User.ProfileView
@{
    ViewData["Title"] = "Profile | Pater";
    Layout = "_UserLayout";
}
@Html.Partial("_Header", Model.header)

<div class="my-10 flex flex-col h-screen">
    <div class="my-6 mx-10">
        @if (ViewData["UnVerified"] != null)
        {
            <div role="alert" class="alert alert-warning">
                <svg xmlns="http://www.w3.org/2000/svg" class="stroke-current shrink-0 h-6 w-6" fill="none" viewBox="0 0 24 24"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" /></svg>
                <span>It seems you haven't verified your email. Click <a asp-action="VerificationRequest" class="link link-info">here</a> to receive Verification Mail.</span>
            </div>
        }
        <div role="alert" class="alert hidden" id="alert">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" class="stroke-info shrink-0 w-6 h-6">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
            </svg>
            <span id="alertMessage"></span>
        </div>
    </div>
    <div class="flex w-auto items-center justify-center py-6">
        <div class="py-3 center mx-auto">
            <div class="bg-base-300 px-4 py-5 rounded-lg shadow-lg text-center w-48">
                <div class="mb-4">
                    <img class="w-auto mx-auto rounded-full object-cover object-center" id="userAvatar" src="~/UserPics/@(Model.header.picPath == null ? "default-avatar.svg" : Model.header.picPath)" alt="Avatar"/>
                </div>
                <label class="cursor-pointer mt-6">
                    <span class="mt-2 text-base leading-normal px-4 py-2 bg-blue-500 text-white text-sm rounded-full">Change Avatar</span>
                    <input type="file" id="newAvatar" class="hidden" accept="image/*" />
                </label>
            </div>
        </div>
    </div>

    <form class="flex flex-col" method="post" id="newInfo">
        <div class="flex w-auto flex-col lg:flex-row items-center py-6">
            <div class="grow my-2">
                <div class="form-control items-center">
                    <input type="text" placeholder=@Model.UserName class="input input-bordered w-96" id="newName"/>
                </div>
            </div>
            <div class="grow my-2">
                <div class="form-control items-center">
                    <input type="email" placeholder=@Model.UserEmail class="input input-bordered w-96" id="newEmail"/>
                </div>
            </div>
        </div>
        <div class="flex justify-center items-center py-6">
            <button class="btn btn-success mx-2">Save</button>
        </div>
    </form>

    <div class="flex justify-center items-center pt-20">
        <button class="btn btn-info" onclick="change_pass.showModal()">Reset Password</button>
    </div>
    <div class="flex justify-center items-center py-12">
        <button class="btn btn-error" onclick="delete_acc.showModal()">Delete Account</button>
    </div>
</div>


@* Modals *@
@* Change Password *@
<dialog id="change_pass" class="modal modal-bottom sm:modal-middle">
    <div class="modal-box card">
        <form class="card-body" id="newPassword">
            <h2 class="card-title justify-center mb-6">Change Password</h2>
            <div class="form-control mt-2">
                <input type="password" placeholder="Old Password" class="input input-bordered" id="oldPass" required/>
            </div>

            <div class="form-control mt-2">
                <input type="password" placeholder="New Password" class="input input-bordered" id="newPass" oninput="CheckPass()" required/>
                <span class="hidden text-error m-2" id="passError">Password doesn't meet the requirements. (Minimum 8 Character, 1 Number, 1 Lowercase and 1 Uppercase)</span>
            </div>

            <div class="form-control mt-6">
                <button id="submitPass" class="btn btn-primary">Change Password</button>
            </div>
        </form>

        <div class="modal-action">
            <form method="dialog">
                <button class="btn">Close</button>
            </form>
        </div>
    </div>
</dialog>

@* Delete Account *@
<dialog id="delete_acc" class="modal modal-bottom sm:modal-middle">
    <div class="modal-box card">
        <form class="card-body" method="post" asp-action="DeleteAccount">
            <h2 class="card-title justify-center mb-6">Delete Password</h2>
            <p class="py-4">This action will permanently delete all information including your Personal Info, Billing Info and all the links associated with your account.</p>
            <div class="form-control my-6">
                <button class="btn btn-error" asp-action="DeleteAccount">Delete Account</button>
            </div>
        </form>

        <div class="modal-action">
            <form method="dialog">
                <button class="btn">Close</button>
            </form>
        </div>
    </div>
</dialog>

<script>
    const alert = document.querySelector("#alert");
    const alertMessage = document.querySelector("#alertMessage");
    
    const newAvatar = document.querySelector("#newAvatar");
    newAvatar.addEventListener("input", async () => {
        const newAvatar = document.querySelector("#newAvatar");
    
        const formData = new FormData();
        formData.append("newAvatar", newAvatar.files[0]);
        
        await  fetch("@Url.Action("ChangeAvatar")", {
            method : "PATCH",
            body : formData
        }).then(async res => {
            if(res.status === 200) {
               alert.className = "alert alert-success";
               alertMessage.innerText = "Successfully Updated the Avatar!"
               
               
               // Don't Simplify!!! This forces browser to not use cached image
               const userAvatar = document.querySelector("#userAvatar");
               const newSrc = userAvatar.src.split("/UserPics/")[0] + await res.text();
               userAvatar.src = '';
               userAvatar.src = newSrc + "?time=" + new Date().getTime();
            }else {
                alert.className = "alert alert-error";
                const json = await res.json();
                alertMessage.innerText = json.error;              
            }
        }).catch(err => { 
            alert.className = "alert alert-error";
            alertMessage.innerText = "Request Failed. Please try again!";
            console.log(err);
        });
        setTimeout(()=> {
            alert.className= "alert hidden";
            alertMessage.innerHTML = "";
            }, 5000);
    });
    
    const newInfo = document.querySelector("#newInfo");
    newInfo.addEventListener("submit", async (e) => {
        e.preventDefault();
        
        const newName = document.querySelector("#newName");
        const newEmail = document.querySelector("#newEmail");
        
        const formData = new FormData();
        formData.append("newName", newName.value);
        formData.append("newEmail", newEmail.value);
        await fetch("@Url.Action("UpdateNameMail")", {
            method : "PATCH",
            body: formData
        }).then(async (res) => {
            if (res.status === 200){
                alert.className = "alert alert-success";
                alertMessage.innerText = "Successfully Updated the Info!"
                
                if(newName.value !== '' && newName.value != null){
                    newName.placeholder = newName.value;
                    newName.value = '';
                }
                if(newEmail.value !== '' && newEmail.value != null) {
                    newEmail.placeholder = newEmail.value;
                    newEmail.value = '';
                }
            }else {
                alert.className = "alert alert-error";
                const json = await res.json();
                alertMessage.innerText = json.error;
            }
        }).catch(err => {
            alert.className = "alert alert-error";
            alertMessage.innerText = "Request Failed. Please try again!";
            console.log(err);
        });
        setTimeout(()=> {
            alert.className= "alert hidden";
            alertMessage.innerHTML = "";
            }, 5000);
    });
    
    const newPassword = document.querySelector("#newPassword");
    newPassword.addEventListener("submit", async (e) => {
        document.querySelector("#change_pass").close();
        e.preventDefault();
        
        const oldPass = document.querySelector("#oldPass");
        const newPass = document.querySelector("#newPass");
        
        const formData = new FormData();
        formData.append("oldPassword", oldPass.value);
        formData.append("newPassword", newPass.value);
        
        await fetch("@Url.Action("ChangePassword")", {
            method : "PATCH",
            body : formData
        }).then(async res => {
            if (res.status === 200){
                alert.className = "alert alert-success";
                alertMessage.innerText = "Successfully Updated the Info!"
            }else {
                alert.className = "alert alert-error";
                const json = await res.json();
                alertMessage.innerText = json.error;
            }
        }).catch(err => {
            alert.className = "alert alert-error";
            alertMessage.innerText = "Request Failed. Please try again!";
            console.log(err);
        })
        
        oldPass.value = "";
        newPass.value = "";
        
        setTimeout(()=> {
            alert.className= "alert hidden";
            alertMessage.innerHTML = "";
            }, 5000);
    })
    
    function CheckPass(){
        const newPass = document.querySelector(`#newPass`);
        
        if (!/^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[a-zA-Z\d]{8,50}$/.test(newPass.value)){
            document.querySelector("#passError").style.display = "block";
            document.querySelector("#submitPass").disabled = true;
        }else {
            document.querySelector("#passError").style.display = "none";
            document.querySelector("#submitPass").disabled = false;
        }
    }
    
</script>